// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]

use serde::Serialize;
use serde::Deserialize;
use crate::model::diesel::dolphin::dolphin_schema::*;

use chrono::NaiveDateTime;
use chrono::DateTime;
use chrono::offset::Utc;
#[derive(Insertable,Queryable,QueryableByName,Debug,Serialize,Deserialize,Default,Clone)]
#[diesel(table_name = rss_sub_source)]
pub struct RssSubSource {
    pub id: i64,
    pub sub_url: String,
    pub created_time: i64,
    pub updated_time: i64,
    pub sub_status: i32,
    pub rss_type: String,
    pub standard_type: String,
    pub standard_version: String,
    pub cron: String,
    pub trigger_count: i32,
    pub next_trigger_time: Option<NaiveDateTime>,
    pub sub_name: String,
    pub last_trigger_time: Option<DateTime<Utc>>,
    pub source_url: Option<String>,
    pub sub_type: Option<String>,
    pub intro: Option<String>,
    pub remark: Option<String>,
    pub title_hash: Option<String>,
    pub failed_count: i32,
    pub lang: Option<String>,
    pub frequency_month: Option<i32>,
    pub reputation: Option<i64>,
    pub rep_latest_refresh_time: Option<i64>,
    pub scrapy_take_time: Option<i32>,
    pub follower: Option<i64>,
    pub censor_status: Option<i32>,
    pub etag: Option<String>,
    pub last_modified: Option<String>,
    pub editor_pick: Option<i32>,
    pub fav_icon_url: Option<String>,
    pub dynamic_interval: i32,
    pub local_icon_url: Option<String>,
    pub creator: i64,
    pub tags: serde_json::Value,
    pub article_count: i64,
    pub article_count_latest_refresh_time: i64,
    pub comment_rss: i32,
    pub part_output: i32,
}

#[derive(Insertable,Queryable,QueryableByName,Debug,Serialize,Deserialize,Default,Clone)]
#[diesel(table_name = article)]
pub struct Article {
    pub id: i64,
    pub user_id: i64,
    pub title: String,
    pub author: String,
    pub guid: String,
    pub created_time: i64,
    pub updated_time: i64,
    pub link: Option<String>,
    pub pub_time: Option<DateTime<Utc>>,
    pub sub_source_id: i64,
    pub cover_image: Option<String>,
    pub channel_reputation: i32,
    pub editor_pick: Option<i32>,
    pub permanent_store: i16,
}

#[derive(Insertable,Queryable,QueryableByName,Debug,Serialize,Deserialize,Default,Clone)]
#[diesel(table_name = article_content)]
pub struct ArticleContent {
    pub id: i64,
    pub article_id: i64,
    pub content: String,
}